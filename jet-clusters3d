#!/usr/bin/env python
# -*- coding: UTF-8 *
# vim :et:

import sys
import math
import pandas
import matplotlib

# avoid problem when no GUI is available
matplotlib.use('Agg')

from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import axes3d

params = plt.rcParams['axes.prop_cycle']
colors = params.by_key()['color']

from sklearn.cluster import KMeans
from sklearn.cluster import AffinityPropagation
from sklearn.cluster import MeanShift
from sklearn.cluster import SpectralClustering
from sklearn.cluster import AgglomerativeClustering
from sklearn.cluster import DBSCAN

def make_plot(name, data):
	fig = plt.figure(figsize=(16,9))

	clusters = len(data.jet.unique())
	X = data[['px','py','pz']].as_matrix()

	# Mean Shift
	data['ms'] = MeanShift().fit(X).labels_

	# DBSCAN
	data['dbscan'] = DBSCAN().fit(X).labels_

	# KMeans
	kmeans = KMeans(init='k-means++', n_clusters=clusters)
	kmeans.fit_predict(X)
	data['kmeans'] = kmeans.labels_

	# Spectral Clustering
	data['spectral'] = SpectralClustering(n_clusters=clusters).fit(X).labels_

	# Agglomerative Clustering
	data['agg'] = AgglomerativeClustering(n_clusters=clusters).fit(X).labels_

	column = [ 'jet', 'ms', 'dbscan', 'kmeans', 'spectral', 'agg' ]
	title  = [ 'Data', 'Mean Shift', 'DBSCAN', 'KMeans', 'Spectral Clustering', 'Agglomerative Clustering' ]

	for i in range(len(column)):
		ax = fig.add_subplot(2, 3, i+1, projection='3d')
		ax.set_axis_off()
		ax.set_xlim3d(-0.7, 0.7)
		ax.set_ylim3d(-0.7, 0.7)
		ax.set_zlim3d(-0.7, 0.7)
		ax.set_title(title[i])
		for j in data[column[i]].unique():
			jet = data[data[column[i]] == j]
			ax.quiver(0, 0, 0, jet.px, jet.py, jet.pz,\
				pivot='tail', arrow_length_ratio=0.05,\
				color=colors[j%len(colors)])

	plt.tight_layout()
	plt.savefig(name)

if __name__ == "__main__":
	data = pandas.read_csv(sys.argv[1])
	name = sys.argv[1].replace('.csv','-3d.png')
	make_plot(name, data)
